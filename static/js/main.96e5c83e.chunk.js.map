{"version":3,"sources":["components/useInput.js","components/SimpleInput.js","App.js","index.js"],"names":["reducerEntered","prevState","action","type","enteredValue","value","isTouched","useInput","validateState","useReducer","entered","dispatchEntered","valueIsValid","hasError","isValid","valueChangeHandler","e","target","inputBlurHandler","SimpleInput","props","trim","enteredName","enteredNameIsValid","nameInputHasError","nameChangeHandler","nameBlurChangeHandler","includes","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","formIsValid","nameInputClasses","emailInputClasses","onSubmit","event","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"gNAGA,SAASA,EAAeC,EAAWC,GAC/B,MAAmB,gBAAhBA,EAAOC,KACC,2BACAF,GADP,IAEIG,aAAcF,EAAOG,QAGV,SAAhBH,EAAOC,KACC,2BACAF,GADP,IAEIK,UAAWJ,EAAOI,iBAH1B,EA2CWC,MAlCf,SAAkBC,GAEd,MAAmCC,qBAAWT,EAAgB,CAC1DI,aAAc,GACdE,WAAW,IAFf,mBAAOI,EAAP,KAAgBC,EAAhB,KAKMC,EAAeJ,EAAcE,EAAQN,cACrCS,GAAYD,GAAgBF,EAAQJ,UAiB1C,MAAO,CACHD,MAAOK,EAAQN,aACfU,QAASF,EACTC,WACAE,mBAnBuB,SAACC,GACxBL,EAAgB,CACZR,KAAM,cACNE,MAAOW,EAAEC,OAAOZ,SAiBpBa,iBAZqB,SAACF,GACtBL,EAAgB,CACZR,KAAM,OACNG,WAAW,O,OC0BRa,EAhEK,SAACC,GAEnB,MAMIb,GAAS,SAAAF,GAAK,MAAqB,KAAjBA,EAAMgB,UALnBC,EADT,EACEjB,MACSkB,EAFX,EAEET,QACUU,EAHZ,EAGEX,SACoBY,EAJtB,EAIEV,mBACkBW,EALpB,EAKER,iBAGF,EAMIX,GAAS,SAAAF,GAAK,OAAIA,EAAMsB,SAAS,QAL5BC,EADT,EACEvB,MACSwB,EAFX,EAEEf,QACUgB,EAHZ,EAGEjB,SACoBkB,EAJtB,EAIEhB,mBACkBiB,EALpB,EAKEd,iBAGEe,GAAc,EACfV,GAAsBM,IACvBI,GAAc,GAGhB,IAOMC,EAAoBV,EAAoB,uBAAyB,eACjEW,EAAoBL,EAAqB,uBAAyB,eAExE,OACE,uBAAMM,SAXsB,SAACC,GAC7BA,EAAMC,kBAUN,UACE,sBAAKC,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,uBACA,uBACErC,KAAK,OACLsC,GAAG,OACHpC,MAAOiB,EACPoB,SAAUjB,EACVkB,OAAQjB,IAETF,GAAqB,0DAExB,sBAAKe,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,QAAf,wBACA,uBACErC,KAAK,QACLsC,GAAG,QACHpC,MAAOuB,EACPc,SAAUX,EACVY,OAAQX,IAETF,GAAsB,0DAEzB,qBAAKS,UAAU,eAAf,SACE,wBAAQK,UAAWX,EAAnB,0BClDOY,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.96e5c83e.chunk.js","sourcesContent":["import { useReducer } from \"react\"\r\n\r\n\r\nfunction reducerEntered(prevState, action){\r\n    if(action.type === 'ENTER_VALUE'){\r\n        return {\r\n            ...prevState,\r\n            enteredValue: action.value\r\n        }\r\n    }\r\n    if(action.type === 'BLUR'){\r\n        return {\r\n            ...prevState,\r\n            isTouched: action.isTouched\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction useInput(validateState){\r\n\r\n    const [entered, dispatchEntered] = useReducer(reducerEntered, {\r\n        enteredValue: '',\r\n        isTouched: false\r\n    })\r\n\r\n    const valueIsValid = validateState(entered.enteredValue);\r\n    const hasError = !valueIsValid && entered.isTouched;\r\n\r\n    const valueChangeHandler = (e)=>{\r\n        dispatchEntered({\r\n            type: 'ENTER_VALUE',\r\n            value: e.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    const inputBlurHandler = (e)=>{\r\n        dispatchEntered({\r\n            type: 'BLUR',\r\n            isTouched: true,\r\n        })\r\n    }\r\n\r\n    return {\r\n        value: entered.enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n    }\r\n}\r\n\r\nexport default useInput;","import useInput from './useInput';\r\n\r\nconst SimpleInput = (props) => {\r\n\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurChangeHandler\r\n  } = useInput(value => value.trim() !== '');\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n  } = useInput(value => value.includes('@'));\r\n\r\n  let formIsValid = false;\r\n  if(enteredNameIsValid && enteredEmailIsValid){\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    if(!enteredNameIsValid) {\r\n      return\r\n    }\r\n  };\r\n\r\n  const nameInputClasses =  nameInputHasError ? 'form-control invalid' : 'form-control';\r\n  const emailInputClasses = emailInputHasError ? 'form-control invalid' : 'form-control';\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input\r\n          type='text'\r\n          id='name'\r\n          value={enteredName}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameBlurChangeHandler}\r\n        />\r\n        {nameInputHasError && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor='email'>Your email</label>\r\n        <input\r\n          type='email'\r\n          id='email'\r\n          value={enteredEmail}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailBlurHandler}\r\n        />\r\n        {emailInputHasError && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState, useRef } from \"react\";\r\n\r\n// const SimpleInput = (props) => {\r\n//   const [enteredName, setEnteredName] = useState('');\r\n//   const inputNameRef = useRef('');\r\n//   const [isValid, setIsValid] = useState(false);\r\n//   const [enteredNameTouched, setEnteredNameTouched] = useState(false);\r\n\r\n\r\n\r\n//   const nameInputChangeHandle = (e)=>{\r\n//     setEnteredName(e.target.value);\r\n//     // if(!enteredName.includes('@')){\r\n//     //   setIsValid(true);\r\n//     //   setEnteredNameTouched(true);\r\n//     // }\r\n//     // console.log(enteredName);\r\n//   }\r\n\r\n//   const nameInputBlurHandler = ()=>{\r\n//     setEnteredNameTouched(true);\r\n//     // if(enteredName.trim() === ''){\r\n//     //   setIsValid(true);\r\n//     //   return;\r\n//     // }\r\n//     // if(!enteredName.includes('@')){\r\n//     //   setIsValid(true);\r\n//     //   return;\r\n//     // }\r\n//     // setEnteredNameTouched(false);\r\n//   }\r\n\r\n//   const formSubmissionHandler = (e)=>{\r\n//     e.preventDefault();\r\n//     if(enteredName.trim() === ''){\r\n//       setIsValid(true);\r\n//       return ;\r\n//     }\r\n//     setIsValid(false);\r\n\r\n//     // const enteredRefName = inputNameRef.current.value;\r\n\r\n//     // console.log(enteredRefName);\r\n//     // fetch request to server\r\n//   }\r\n\r\n//   const nameInputIsValid = isValid && enteredNameTouched;\r\n//   const nameInputClasses = nameInputIsValid ? 'form-control invalid' : 'form-control';\r\n\r\n//   return (\r\n//     <form onSubmit={formSubmissionHandler}>\r\n//       <div className={nameInputClasses}>\r\n//         <label htmlFor='name'>Your Name</label>\r\n//         <input type='text' id='name' \r\n//             ref={inputNameRef} \r\n//             onChange={nameInputChangeHandle}\r\n//             onBlur={nameInputBlurHandler} \r\n//         />\r\n//         {nameInputIsValid && <p>name must not be empty</p>}\r\n//       </div>\r\n//       <div className=\"form-actions\">\r\n//         <button>Submit</button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default SimpleInput;","import SimpleInput from './components/SimpleInput';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <SimpleInput />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}