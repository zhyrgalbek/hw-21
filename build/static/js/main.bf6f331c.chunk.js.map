{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["reducerName","prevState","action","type","isValid","value","search","name","isValidName","lastName","isValidLastName","includes","email","isValidEmail","submitDisabled","BasicForm","props","useReducer","inputName","dispatchName","useEffect","isValidInput","isValidlastNameInput","isValidEmailInput","className","htmlFor","id","onChange","e","target","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"uNAEA,SAASA,EAAYC,EAAWC,GAC9B,GAAoB,cAAhBA,EAAOC,KAAsB,CAC/B,IAAIC,GAAU,EAMd,OAJEA,GADyC,IAAvCF,EAAOG,MAAMC,OAAO,eAAyC,KAAjBJ,EAAOG,MAKhD,2BACFJ,GADL,IAEEM,KAAML,EAAOG,MACbG,YAAaJ,IAGjB,GAAoB,mBAAhBF,EAAOC,KAA2B,CACpC,IAAIC,GAAU,EAMd,OAJEA,GADyC,IAAvCF,EAAOG,MAAMC,OAAO,eAAyC,KAAjBJ,EAAOG,MAKhD,2BACFJ,GADL,IAEEQ,SAAUP,EAAOG,MACjBK,gBAAiBN,IAGrB,GAAoB,UAAhBF,EAAOC,MAAqC,KAAjBD,EAAOG,MAAc,CAClD,IAAID,GAAU,EAMd,OAJEA,GADEF,EAAOG,MAAMM,SAAS,KAKnB,2BACFV,GADL,IAEEW,MAAOV,EAAOG,MACdQ,aAAcT,IAGlB,GAAoB,aAAhBF,EAAOC,KAAqB,CAC9B,IAAIC,GAAU,EAWd,OAT4B,IAA1BH,EAAUO,cACoB,IAA9BP,EAAUS,kBACiB,IAA3BT,EAAUY,cACS,KAAnBZ,EAAUM,MACa,KAAvBN,EAAUQ,UACU,KAApBR,EAAUW,QAEVR,GAAU,GAEL,2BACFH,GADL,IAEEa,eAAgBV,IAGpB,OAAO,eACFH,GAIP,IAmEec,EAnEG,SAACC,GAEjB,MAAkCC,qBAAWjB,EAAa,CACxDO,KAAM,GACNC,aAAa,EACbC,SAAU,GACVC,iBAAiB,EACjBE,MAAO,GACPC,cAAc,EACdC,gBAAgB,IAPlB,mBAAOI,EAAP,KAAkBC,EAAlB,KA+BAC,qBAAU,WACRD,EAAa,CACXhB,KAAM,eAEP,CAACe,EAAUX,KAAMW,EAAUT,SAAUS,EAAUN,QAElD,IAAIS,EAAeH,EAAUV,YAAc,uBAAyB,eAChEc,EAAuBJ,EAAUR,gBAAkB,uBAAyB,eAC5Ea,EAAoBL,EAAUL,aAAe,uBAAyB,eAE1E,OACE,iCACE,sBAAKW,UAAU,gBAAf,UACE,sBAAKA,UAAWH,EAAhB,UACE,uBAAOI,QAAQ,OAAf,wBACA,uBAAOtB,KAAK,OAAOuB,GAAG,OAAOC,SApCP,SAACC,GAC7BT,EAAa,CACXhB,KAAM,YACNE,MAAOuB,EAAEC,OAAOxB,cAmCd,sBAAKmB,UAAWF,EAAhB,UACE,uBAAOG,QAAQ,WAAf,uBACA,uBAAOtB,KAAK,OAAOuB,GAAG,WAAWC,SAjCP,SAACC,GACjCT,EAAa,CACXhB,KAAM,iBACNE,MAAOuB,EAAEC,OAAOxB,iBAiChB,sBAAKmB,UAAWD,EAAhB,UACE,uBAAOE,QAAQ,QAAf,4BACA,uBAAOtB,KAAK,QAAQuB,GAAG,QAAQC,SA/BN,SAACC,GAC9BT,EAAa,CACXhB,KAAM,QACNE,MAAOuB,EAAEC,OAAOxB,cA8BhB,qBAAKmB,UAAU,eAAf,SACE,uBAAOrB,KAAK,SAASE,MAAM,SAASyB,SAAUZ,EAAUJ,uBChHjDiB,MATf,WACE,OACE,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,OCDNQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf6f331c.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\n\nfunction reducerName(prevState, action) {\n  if (action.type === 'VALIDNAME') {\n    let isValid = false;\n    if (action.value.search(/[^a-zA-Z]+/) !== -1 || action.value === '') {\n      isValid = true;\n    } else {\n      isValid = false;\n    }\n    return {\n      ...prevState,\n      name: action.value,\n      isValidName: isValid\n    }\n  }\n  if (action.type === 'VALID_LASTNAME') {\n    let isValid = false;\n    if (action.value.search(/[^a-zA-Z]+/) !== -1 || action.value === '') {\n      isValid = true;\n    } else {\n      isValid = false;\n    }\n    return {\n      ...prevState,\n      lastName: action.value,\n      isValidLastName: isValid\n    }\n  }\n  if (action.type === 'EMAIL' || action.value === '') {\n    let isValid = false;\n    if (action.value.includes('@')) {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n    return {\n      ...prevState,\n      email: action.value,\n      isValidEmail: isValid\n    }\n  }\n  if (action.type === 'DISABLED') {\n    let isValid = true;\n    if (\n      prevState.isValidName !== true && \n      prevState.isValidLastName !== true && \n      prevState.isValidEmail !== true &&\n      prevState.name !== '' &&\n      prevState.lastName !== '' &&\n      prevState.email !== ''\n      ) {\n      isValid = false;\n    }\n    return {\n      ...prevState,\n      submitDisabled: isValid\n    }\n  }\n  return {\n    ...prevState\n  }\n}\n\nconst BasicForm = (props) => {\n\n  const [inputName, dispatchName] = useReducer(reducerName, {\n    name: '',\n    isValidName: false,\n    lastName: '',\n    isValidLastName: false,\n    email: '',\n    isValidEmail: false,\n    submitDisabled: true\n  })\n\n  const inputNameHandleChange = (e) => {\n    dispatchName({\n      type: 'VALIDNAME',\n      value: e.target.value\n    })\n  }\n\n  const inputLastNameHandleChange = (e) => {\n    dispatchName({\n      type: 'VALID_LASTNAME',\n      value: e.target.value\n    })\n  }\n\n  const inputEmailHandleChange = (e) => {\n    dispatchName({\n      type: 'EMAIL',\n      value: e.target.value\n    })\n  }\n\n  useEffect(() => {\n    dispatchName({\n      type: 'DISABLED'\n    })\n  }, [inputName.name, inputName.lastName, inputName.email]);\n\n  let isValidInput = inputName.isValidName ? 'form-control invalid' : 'form-control';\n  let isValidlastNameInput = inputName.isValidLastName ? 'form-control invalid' : 'form-control';\n  let isValidEmailInput = inputName.isValidEmail ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form>\n      <div className='control-group'>\n        <div className={isValidInput}>\n          <label htmlFor='name'>First Name</label>\n          <input type='text' id='name' onChange={inputNameHandleChange} />\n        </div>\n        <div className={isValidlastNameInput}>\n          <label htmlFor='lastname'>Last Name</label>\n          <input type='text' id='lastname' onChange={inputLastNameHandleChange} />\n        </div>\n      </div>\n      <div className={isValidEmailInput}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input type='email' id='email' onChange={inputEmailHandleChange} />\n      </div>\n      <div className='form-actions'>\n        <input type='submit' value=\"Submit\" disabled={inputName.submitDisabled} />\n        {/* <button>Submit</button> */}\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;","import BasicForm from './components/BasicForm';\r\nimport SimpleInput from './components/SimpleInput';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <BasicForm />\r\n      {/* <SimpleInput /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}